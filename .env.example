# Copy this file to .env and fill in secrets for local development.

# Headscale server settings
HEADSCALE_API_BASE_URL=http://localhost:8080
HEADSCALE_API_KEY=
# Optional namespace filter
HEADSCALE_USER=
PORT=5000
TIMEZONE=UTC
HTTP_TIMEOUT=10

# Rate limiting (per-minute)
RATE_LIMIT_ENABLED=YES
# Integer only; requests per minute per IP (0 disables). Default 100.
RATE_LIMIT_PER_IP=100
# Optional global per-minute integer limit across all clients/endpoints (0/empty disables)
RATE_LIMIT_GLOBAL=
# Optional storage backend (default is file:///tmp/tailscale-healthcheck-ratelimit.json)
# - Redis:  redis://host:6379/0
# - File:   file:///path/to/ratelimit.json (shared on host)
# - Empty:  in-memory (per-process)
# RATE_LIMIT_STORAGE_URL=
# Include standard rate limit headers when Flask-Limiter is active
RATE_LIMIT_HEADERS_ENABLED=YES

# Retry/backoff controls for outbound requests
MAX_RETRIES=3
BACKOFF_BASE_SECONDS=0.5
BACKOFF_MAX_SECONDS=8.0
BACKOFF_JITTER_SECONDS=0.1


# Caching (enabled by default: 60s)
CACHE_ENABLED=YES
CACHE_TTL_SECONDS=60
# CACHE_BACKEND=FILE     # Default: FILE. Options: MEMORY, FILE, or REDIS
# REDIS_URL=redis://localhost:6379/0
# CACHE_PREFIX=ts_hc
# CACHE_FILE_PATH=/tmp/tailscale-healthcheck-cache.json  # Default path for FILE backend

# Logging (default INFO; set DEBUG only for troubleshooting)
LOG_LEVEL=INFO

# Health thresholds and behavior
ONLINE_THRESHOLD_MINUTES=5
KEY_THRESHOLD_MINUTES=1440
GLOBAL_HEALTHY_THRESHOLD=100
GLOBAL_ONLINE_HEALTHY_THRESHOLD=100
GLOBAL_KEY_HEALTHY_THRESHOLD=100
GLOBAL_UPDATE_HEALTHY_THRESHOLD=100
UPDATE_HEALTHY_IS_INCLUDED_IN_HEALTH=NO
DISPLAY_SETTINGS_IN_OUTPUT=NO

# Filters (comma-separated; wildcards allowed)
INCLUDE_OS=
EXCLUDE_OS=
INCLUDE_IDENTIFIER=
EXCLUDE_IDENTIFIER=
INCLUDE_TAGS=
EXCLUDE_TAGS=
INCLUDE_IDENTIFIER_UPDATE_HEALTHY=
EXCLUDE_IDENTIFIER_UPDATE_HEALTHY=
INCLUDE_TAG_UPDATE_HEALTHY=
EXCLUDE_TAG_UPDATE_HEALTHY=

# Gunicorn settings
GUNICORN_TIMEOUT=120
GUNICORN_GRACEFUL_TIMEOUT=120

# Internal flag used by Gunicorn master init (do not set manually in prod)
# GUNICORN_MASTER_PROCESS=true
